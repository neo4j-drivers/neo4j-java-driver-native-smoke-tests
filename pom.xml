<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.neo4j.examples</groupId>
	<artifactId>driver-native</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>driver-native</name>
	<description>Project compiling neo4j driver nativly</description>

	<properties>
		<expectMetricsToBeOn>false</expectMetricsToBeOn>
		<imageName>printmovies</imageName>
		<java.version>1.8</java.version>
		<jbang-maven-plugin.version>0.0.7</jbang-maven-plugin.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<micrometer.version>1.15.3</micrometer.version>
		<native.maven.plugin.version>0.9.10</native.maven.plugin.version>
		<neo4j-java-driver.version>6.0-SNAPSHOT</neo4j-java-driver.version>
		<picocli.version>4.6.3</picocli.version>
		<docker.image.tag>4.4</docker.image.tag>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.neo4j.driver</groupId>
			<artifactId>neo4j-java-driver</artifactId>
			<version>${neo4j-java-driver.version}</version>
		</dependency>
        <dependency>
            <groupId>org.neo4j.driver</groupId>
            <artifactId>neo4j-java-driver-observation-micrometer</artifactId>
            <version>${neo4j-java-driver.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
            <version>${micrometer.version}</version>
            <optional>true</optional>
        </dependency>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picocli.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.10.0</version>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>info.picocli</groupId>
							<artifactId>picocli-codegen</artifactId>
							<version>${picocli.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.graalvm.buildtools</groupId>
				<artifactId>native-maven-plugin</artifactId>
				<version>${native.maven.plugin.version}</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<goals>
							<goal>build</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
				<configuration>
					<imageName>${imageName}</imageName>
					<mainClass>org.neo4j.examples.drivernative.DriverNativeApplication</mainClass>
					<buildArgs>
						<buildArg>--no-fallback</buildArg>
						<buildArg>-H:+ReportExceptionStackTraces</buildArg>
						<buildArg>-H:EnableURLProtocols=http,https</buildArg>
						<buildArg>--enable-all-security-services</buildArg>
						<buildArg>-H:+JNI</buildArg>
					</buildArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>dev.jbang</groupId>
				<artifactId>jbang-maven-plugin</artifactId>
				<version>${jbang-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>execute_native_binary</id>
						<goals>
							<goal>run</goal>
						</goals>
						<phase>package</phase>
						<configuration >
							<script>${project.basedir}/bin/execute_native_binary.java</script>
							<args>
								<arg>${docker.image.tag}</arg>
								<arg>${project.build.directory}/${imageName}</arg>
								<arg>${expectMetricsToBeOn}</arg>
							</args>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>with-micrometer</id>
			<activation>
				<property>
					<name>with-micrometer</name>
				</property>
			</activation>
			<properties>
				<imageName>printmoviesMM</imageName>
				<expectMetricsToBeOn>true</expectMetricsToBeOn>
			</properties>
			<dependencies>
                <dependency>
                    <groupId>org.neo4j.driver</groupId>
                    <artifactId>neo4j-java-driver-observation-micrometer</artifactId>
                    <version>${neo4j-java-driver.version}</version>
                </dependency>
				<dependency>
					<groupId>io.micrometer</groupId>
					<artifactId>micrometer-core</artifactId>
					<version>${micrometer.version}</version>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>
